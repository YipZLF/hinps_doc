# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, YipZLF
# This file is distributed under the same license as the HiNPS package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: HiNPS \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-08-12 09:58+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"

#: ../../source/data.md:1
msgid "数据与采样"
msgstr ""

#: ../../source/data.md:3
msgid "本模块负责与数据的获得、存储和使用的部分。在HiNPS中，我们认为："
msgstr ""

#: ../../source/data.md:5
msgid "每一个约束都应该以一个`Constraint`对象来表示"
msgstr ""

#: ../../source/data.md:6
msgid "所有的约束都保存在一个`Dataset`对象中在训练过程中"
msgstr ""

#: ../../source/data.md:7
msgid "`Dataset`对象中会根据需要生成`Sampler`并调用采样逻辑获得数据"
msgstr ""

#: ../../source/data.md:8
msgid "约束会通过某种**计算**得到一个值作为损失函数的一部分，所以为了进行这个计算`Constraint`对象存储了采样得到的数据，并且定义了这个计算。"
msgstr ""

#: ../../source/data.md:10
msgid "`Constraint` 约束"
msgstr ""

#: ../../source/data.md:12
msgid "![constraint](image/constraint.png \"constraint\")"
msgstr ""

#: ../../source/data.md:12
msgid "constraint"
msgstr ""

#: ../../source/data.md:14
msgid ""
"这一部分内容可以见源代码`data/constraint.py`中。 "
"`Constraint`提供了几种基本的约束形式，这几种基本约束形式我们都假设表示为等式约束，需要给出等式左边和右边的函数句柄，然后该约束分别计算两边的结果然后作差作为残差(residual)。"
msgstr ""

#: ../../source/data.md:17
msgid "该对象存储了具体采样得到的数据。"
msgstr ""

#: ../../source/data.md:18
msgid "`x`: (S,N,D)，采样得到的数据，S为子区域数目，如果无区域分解则默认为1；N为采样数目；D为输入数据的维度。"
msgstr ""

#: ../../source/data.md:19
msgid "`x_normal`: 这一项是在输入数据点计算得到的法向单位向量。"
msgstr ""

#: ../../source/data.md:20
msgid "`value`: 是在`x`上通过等式右边函数句柄进行计算得到的函数值。"
msgstr ""

#: ../../source/data.md:22
msgid "约束表达式"
msgstr ""

#: ../../source/data.md:24
msgid "为了表示该约束的计算，主要参数如下："
msgstr ""

#: ../../source/data.md:26
msgid ""
"`type`:str, "
"表示该约束的类型，['dirichlet','neumann','internal','from_neighbour','custom']"
msgstr ""

#: ../../source/data.md:27
msgid "`internal`: 指的是施加在求解区域内部的约束，一般为PDE"
msgstr ""

#: ../../source/data.md:28
msgid "`from_neighbour`: 指的是在区域分解过程中需要从其他相邻区域获得的边界信息（该类型的约束不需要用户指定）"
msgstr ""

#: ../../source/data.md:29
msgid "`custom`: 自定义的约束类型，用户需要自己实现计算函数"
msgstr ""

#: ../../source/data.md:30
msgid "`rhs_handle`: expression.Function, 右侧函数的函数句柄"
msgstr ""

#: ../../source/data.md:31
msgid "`lhs_handle`: expression.Function, 左侧函数的函数句柄"
msgstr ""

#: ../../source/data.md:32
msgid "若为None，则认为只需要直接用神经网络推理得到pred"
msgstr ""

#: ../../source/data.md:34
msgid "具体的计算发生在`get_residual`中。目前我们默认需要由调用者传入一个`network`用来推理。"
msgstr ""

#: ../../source/data.md:36
msgid "狄利克雷（第一类）边界条件"
msgstr ""

#: ../../source/data.md:37
msgid "在`get_residual`中进行正向推理计算，然后与`value`（等式约束的右侧函数值）作差。"
msgstr ""

#: ../../source/data.md:40
msgid "`value`是在进行采样的时候就算出来的，所以不需要在此处进行计算。"
msgstr ""

#: ../../source/data.md:42
msgid "纽曼（第二类）边界条件"
msgstr ""

#: ../../source/data.md:44
msgid "需要在构建`Constraint`的时候传入参数："
msgstr ""

#: ../../source/data.md:45
msgid "`grad_dims`: List, 指的是需要计算梯度的维度序号，例如："
msgstr ""

#: ../../source/data.md:46
msgid "`[1,2,3]`指的是在3D含时问题时对空间维度求法向"
msgstr ""

#: ../../source/data.md:47
msgid "`[0]`指的是对时间维度求“法向”，即对时间求微分。"
msgstr ""

#: ../../source/data.md:49
msgid "然后再`get_residual`中我们会计算正向并且求导得到在采样点的梯度在法向上的投影。"
msgstr ""

#: ../../source/data.md:51
msgid ""
"\n"
"\\frac{\\partial u}{\\partial \\mathbf{n} } := \\nabla_x u(x; \\theta) "
"\\cdot \\mathbf{n_x} \n"
msgstr ""

#: ../../source/data.md:55
msgid "然后与等式右侧的函数值`value`作差。"
msgstr ""

#: ../../source/data.md:57
msgid "PDE约束（internal）"
msgstr ""

#: ../../source/data.md:59
msgid "PDE的左侧是比较复杂的含微分的表达式。我们需要创建约束`Constraint`时明确给出左侧函数的表达式。见[pde模块](constraint.md)。"
msgstr ""

#: ../../source/data.md:61
msgid "它的接口要求是接受`u`作为待解的函数值（神经网络推理的结果），`x`作为采样点，然后计算返回偏微分方程的左侧值。"
msgstr ""

#: ../../source/data.md:63
msgid "如果x的维度是[S,N,InputDim]，u的维度应当为[S,N,OutputDim]，等式的右侧函数句柄应当返回一个[S,N,OutputDim]，而该左侧的函数句柄`lhs_handle`应当返回一个[S,N,OutputDim]（与右侧函数句柄范围的数据规模一样）"
msgstr ""

#: ../../source/data.md:65
msgid "作用范围"
msgstr ""

#: ../../source/data.md:67
msgid "表示该约束在时空上的作用范围，我们有以下主要参数："
msgstr ""

#: ../../source/data.md:69
msgid "`on_boundary`: bool,默认为True. 用于指定当前约束是否是施加在边界上的"
msgstr ""

#: ../../source/data.md:70
msgid "`filter`: expression.Function, 指定当前约束使用的空间范围，"
msgstr ""

#: ../../source/data.md:71
msgid "`time_span`: tuple(2)，指定当前约束使用的时间范围，如果为None则默认为全过程，如果两个值相等则认为是一个时刻（例如初始时刻）"
msgstr ""

#: ../../source/data.md:74
msgid "自定义你自己的约束"
msgstr ""

#: ../../source/data.md:76 ../../source/data.md:96
msgid "撰写中..."
msgstr ""

#: ../../source/data.md:79
msgid "`Dataset`数据集"
msgstr ""

#: ../../source/data.md:81
msgid "`Sampler`采样器"
msgstr ""

#: ../../source/data.md:83
msgid "目前采样器支持的种类有只有GridSample, UniformSample两种。我们需要给出参数有："
msgstr ""

#: ../../source/data.md:85
msgid "`inf`,`sup`: 采样范围：我们当前支持在方块区域中采样，只需要给出每个维度的上界(sup)和下界(inf)，例如："
msgstr ""

#: ../../source/data.md:86
msgid "`inf=List([0,0,0,0]), sup=List([10,2,2,2])`"
msgstr ""

#: ../../source/data.md:87
msgid "`size`: 采样数据量"
msgstr ""

#: ../../source/data.md:88
msgid "`device`: 采样数据存放的位置, [`cpu`,`cuda:i`,...]"
msgstr ""

#: ../../source/data.md:90
msgid "构建完采样器后调用`.sample()`方法可以进行采样。"
msgstr ""

#: ../../source/data.md:92
msgid "自定义采样逻辑"
msgstr ""

#: ../../source/data.md:94
msgid "我们支持自定义重要性采样、自适应采样等采样策略。实现应当保证接口一致性，在`__init__`中初始化该采样方法需要的数据；`.sample()`方法执行采样逻辑。"
msgstr ""

#: ../../source/data.md:99
msgid "Coming up..."
msgstr ""

#: ../../source/data.md:100
msgid "区域分解"
msgstr ""

